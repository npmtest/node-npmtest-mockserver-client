{"/home/travis/build/npmtest/node-npmtest-mockserver-client/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-mockserver-client/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_mockserver_client */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-mockserver-client/lib.npmtest_mockserver_client.js":{"path":"/home/travis/build/npmtest/node-npmtest-mockserver-client/lib.npmtest_mockserver_client.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":62}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":68}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_mockserver_client */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_mockserver_client = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_mockserver_client = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-mockserver-client/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-mockserver-client/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":61}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":75},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-mockserver-client && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_mockserver_client */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_mockserver_client","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_mockserver_client.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_mockserver_client.rollup.js'] =","            local.assetsDict['/assets.npmtest_mockserver_client.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_mockserver_client.__dirname + '/lib.npmtest_mockserver_client.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-mockserver-client/node_modules/mockserver-client/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mockserver-client/node_modules/mockserver-client/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":1},"end":{"line":9,"column":13}}},"2":{"name":"sendRequest","line":15,"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":70}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":29},"end":{"line":37,"column":49}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":32},"end":{"line":44,"column":49}}},"5":{"name":"(anonymous_5)","line":48,"loc":{"start":{"line":48,"column":31},"end":{"line":48,"column":43}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":26},"end":{"line":60,"column":43}}},"7":{"name":"(anonymous_7)","line":79,"loc":{"start":{"line":79,"column":27},"end":{"line":79,"column":49}}},"8":{"name":"(anonymous_8)","line":88,"loc":{"start":{"line":88,"column":40},"end":{"line":88,"column":56}}},"9":{"name":"(anonymous_9)","line":98,"loc":{"start":{"line":98,"column":36},"end":{"line":98,"column":78}}},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":34},"end":{"line":147,"column":57}}},"11":{"name":"(anonymous_11)","line":160,"loc":{"start":{"line":160,"column":37},"end":{"line":160,"column":79}}},"12":{"name":"(anonymous_12)","line":175,"loc":{"start":{"line":175,"column":36},"end":{"line":175,"column":55}}},"13":{"name":"(anonymous_13)","line":192,"loc":{"start":{"line":192,"column":25},"end":{"line":192,"column":58}}},"14":{"name":"(anonymous_14)","line":202,"loc":{"start":{"line":202,"column":24},"end":{"line":202,"column":42}}},"15":{"name":"(anonymous_15)","line":230,"loc":{"start":{"line":230,"column":33},"end":{"line":230,"column":45}}},"16":{"name":"(anonymous_16)","line":237,"loc":{"start":{"line":237,"column":24},"end":{"line":237,"column":42}}},"17":{"name":"(anonymous_17)","line":248,"loc":{"start":{"line":248,"column":24},"end":{"line":248,"column":36}}},"18":{"name":"(anonymous_18)","line":258,"loc":{"start":{"line":258,"column":24},"end":{"line":258,"column":56}}},"19":{"name":"(anonymous_19)","line":277,"loc":{"start":{"line":277,"column":35},"end":{"line":277,"column":67}}},"20":{"name":"(anonymous_20)","line":278,"loc":{"start":{"line":278,"column":38},"end":{"line":278,"column":61}}},"21":{"name":"(anonymous_21)","line":305,"loc":{"start":{"line":305,"column":39},"end":{"line":305,"column":71}}},"22":{"name":"(anonymous_22)","line":306,"loc":{"start":{"line":306,"column":38},"end":{"line":306,"column":61}}},"23":{"name":"(anonymous_23)","line":344,"loc":{"start":{"line":344,"column":22},"end":{"line":344,"column":44}}},"24":{"name":"(anonymous_24)","line":346,"loc":{"start":{"line":346,"column":40},"end":{"line":346,"column":56}}},"25":{"name":"(anonymous_25)","line":370,"loc":{"start":{"line":370,"column":25},"end":{"line":370,"column":58}}},"26":{"name":"(anonymous_26)","line":380,"loc":{"start":{"line":380,"column":25},"end":{"line":380,"column":43}}},"27":{"name":"(anonymous_27)","line":408,"loc":{"start":{"line":408,"column":33},"end":{"line":408,"column":45}}},"28":{"name":"(anonymous_28)","line":415,"loc":{"start":{"line":415,"column":25},"end":{"line":415,"column":43}}},"29":{"name":"(anonymous_29)","line":426,"loc":{"start":{"line":426,"column":24},"end":{"line":426,"column":36}}},"30":{"name":"(anonymous_30)","line":436,"loc":{"start":{"line":436,"column":24},"end":{"line":436,"column":56}}},"31":{"name":"(anonymous_31)","line":453,"loc":{"start":{"line":453,"column":29},"end":{"line":453,"column":61}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":477,"column":5}},"2":{"start":{"line":12,"column":4},"end":{"line":12,"column":25}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":31}},"4":{"start":{"line":15,"column":4},"end":{"line":68,"column":5}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":67}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":39}},"7":{"start":{"line":19,"column":8},"end":{"line":22,"column":9}},"8":{"start":{"line":21,"column":12},"end":{"line":21,"column":48}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":94}},"10":{"start":{"line":25,"column":8},"end":{"line":33,"column":10}},"11":{"start":{"line":35,"column":8},"end":{"line":35,"column":40}},"12":{"start":{"line":37,"column":8},"end":{"line":58,"column":11}},"13":{"start":{"line":38,"column":12},"end":{"line":38,"column":26}},"14":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"15":{"start":{"line":41,"column":16},"end":{"line":41,"column":53}},"16":{"start":{"line":44,"column":12},"end":{"line":46,"column":15}},"17":{"start":{"line":45,"column":16},"end":{"line":45,"column":30}},"18":{"start":{"line":48,"column":12},"end":{"line":57,"column":15}},"19":{"start":{"line":49,"column":16},"end":{"line":56,"column":17}},"20":{"start":{"line":50,"column":20},"end":{"line":50,"column":60}},"21":{"start":{"line":52,"column":20},"end":{"line":55,"column":23}},"22":{"start":{"line":60,"column":8},"end":{"line":62,"column":11}},"23":{"start":{"line":61,"column":12},"end":{"line":61,"column":35}},"24":{"start":{"line":64,"column":8},"end":{"line":64,"column":24}},"25":{"start":{"line":65,"column":8},"end":{"line":65,"column":18}},"26":{"start":{"line":67,"column":8},"end":{"line":67,"column":32}},"27":{"start":{"line":79,"column":4},"end":{"line":471,"column":10}},"28":{"start":{"line":84,"column":12},"end":{"line":87,"column":14}},"29":{"start":{"line":88,"column":12},"end":{"line":97,"column":14}},"30":{"start":{"line":89,"column":16},"end":{"line":96,"column":18}},"31":{"start":{"line":98,"column":12},"end":{"line":116,"column":14}},"32":{"start":{"line":99,"column":16},"end":{"line":115,"column":18}},"33":{"start":{"line":147,"column":12},"end":{"line":149,"column":14}},"34":{"start":{"line":148,"column":16},"end":{"line":148,"column":76}},"35":{"start":{"line":160,"column":12},"end":{"line":162,"column":14}},"36":{"start":{"line":161,"column":16},"end":{"line":161,"column":90}},"37":{"start":{"line":175,"column":12},"end":{"line":177,"column":14}},"38":{"start":{"line":176,"column":16},"end":{"line":176,"column":49}},"39":{"start":{"line":192,"column":12},"end":{"line":209,"column":14}},"40":{"start":{"line":193,"column":16},"end":{"line":195,"column":17}},"41":{"start":{"line":194,"column":20},"end":{"line":194,"column":30}},"42":{"start":{"line":196,"column":16},"end":{"line":208,"column":19}},"43":{"start":{"line":203,"column":20},"end":{"line":206,"column":21}},"44":{"start":{"line":204,"column":24},"end":{"line":204,"column":79}},"45":{"start":{"line":205,"column":24},"end":{"line":205,"column":42}},"46":{"start":{"line":207,"column":20},"end":{"line":207,"column":33}},"47":{"start":{"line":230,"column":12},"end":{"line":244,"column":14}},"48":{"start":{"line":231,"column":16},"end":{"line":231,"column":41}},"49":{"start":{"line":232,"column":16},"end":{"line":234,"column":17}},"50":{"start":{"line":233,"column":20},"end":{"line":233,"column":55}},"51":{"start":{"line":235,"column":16},"end":{"line":243,"column":19}},"52":{"start":{"line":238,"column":20},"end":{"line":241,"column":21}},"53":{"start":{"line":239,"column":24},"end":{"line":239,"column":79}},"54":{"start":{"line":240,"column":24},"end":{"line":240,"column":42}},"55":{"start":{"line":242,"column":20},"end":{"line":242,"column":33}},"56":{"start":{"line":248,"column":12},"end":{"line":250,"column":14}},"57":{"start":{"line":249,"column":16},"end":{"line":249,"column":57}},"58":{"start":{"line":258,"column":12},"end":{"line":266,"column":14}},"59":{"start":{"line":259,"column":16},"end":{"line":265,"column":17}},"60":{"start":{"line":260,"column":20},"end":{"line":260,"column":106}},"61":{"start":{"line":261,"column":23},"end":{"line":265,"column":17}},"62":{"start":{"line":262,"column":20},"end":{"line":262,"column":83}},"63":{"start":{"line":264,"column":20},"end":{"line":264,"column":90}},"64":{"start":{"line":277,"column":12},"end":{"line":292,"column":14}},"65":{"start":{"line":278,"column":16},"end":{"line":284,"column":18}},"66":{"start":{"line":279,"column":20},"end":{"line":283,"column":21}},"67":{"start":{"line":280,"column":24},"end":{"line":280,"column":56}},"68":{"start":{"line":282,"column":24},"end":{"line":282,"column":41}},"69":{"start":{"line":285,"column":16},"end":{"line":291,"column":17}},"70":{"start":{"line":286,"column":20},"end":{"line":286,"column":126}},"71":{"start":{"line":287,"column":23},"end":{"line":291,"column":17}},"72":{"start":{"line":288,"column":20},"end":{"line":288,"column":103}},"73":{"start":{"line":290,"column":20},"end":{"line":290,"column":110}},"74":{"start":{"line":305,"column":12},"end":{"line":320,"column":14}},"75":{"start":{"line":306,"column":16},"end":{"line":312,"column":18}},"76":{"start":{"line":307,"column":20},"end":{"line":311,"column":21}},"77":{"start":{"line":308,"column":24},"end":{"line":308,"column":56}},"78":{"start":{"line":310,"column":24},"end":{"line":310,"column":41}},"79":{"start":{"line":313,"column":16},"end":{"line":319,"column":17}},"80":{"start":{"line":314,"column":20},"end":{"line":314,"column":143}},"81":{"start":{"line":315,"column":23},"end":{"line":319,"column":17}},"82":{"start":{"line":316,"column":20},"end":{"line":316,"column":120}},"83":{"start":{"line":318,"column":20},"end":{"line":318,"column":127}},"84":{"start":{"line":322,"column":12},"end":{"line":332,"column":14}},"85":{"start":{"line":333,"column":12},"end":{"line":333,"column":26}},"86":{"start":{"line":346,"column":12},"end":{"line":355,"column":14}},"87":{"start":{"line":347,"column":16},"end":{"line":354,"column":18}},"88":{"start":{"line":370,"column":12},"end":{"line":387,"column":14}},"89":{"start":{"line":371,"column":16},"end":{"line":373,"column":17}},"90":{"start":{"line":372,"column":20},"end":{"line":372,"column":30}},"91":{"start":{"line":374,"column":16},"end":{"line":386,"column":19}},"92":{"start":{"line":381,"column":20},"end":{"line":384,"column":21}},"93":{"start":{"line":382,"column":24},"end":{"line":382,"column":79}},"94":{"start":{"line":383,"column":24},"end":{"line":383,"column":42}},"95":{"start":{"line":385,"column":20},"end":{"line":385,"column":33}},"96":{"start":{"line":408,"column":12},"end":{"line":422,"column":14}},"97":{"start":{"line":409,"column":16},"end":{"line":409,"column":41}},"98":{"start":{"line":410,"column":16},"end":{"line":412,"column":17}},"99":{"start":{"line":411,"column":20},"end":{"line":411,"column":55}},"100":{"start":{"line":413,"column":16},"end":{"line":421,"column":19}},"101":{"start":{"line":416,"column":20},"end":{"line":419,"column":21}},"102":{"start":{"line":417,"column":24},"end":{"line":417,"column":79}},"103":{"start":{"line":418,"column":24},"end":{"line":418,"column":42}},"104":{"start":{"line":420,"column":20},"end":{"line":420,"column":33}},"105":{"start":{"line":426,"column":12},"end":{"line":428,"column":14}},"106":{"start":{"line":427,"column":16},"end":{"line":427,"column":57}},"107":{"start":{"line":436,"column":12},"end":{"line":444,"column":14}},"108":{"start":{"line":437,"column":16},"end":{"line":443,"column":17}},"109":{"start":{"line":438,"column":20},"end":{"line":438,"column":106}},"110":{"start":{"line":439,"column":23},"end":{"line":443,"column":17}},"111":{"start":{"line":440,"column":20},"end":{"line":440,"column":83}},"112":{"start":{"line":442,"column":20},"end":{"line":442,"column":90}},"113":{"start":{"line":453,"column":12},"end":{"line":461,"column":14}},"114":{"start":{"line":454,"column":16},"end":{"line":460,"column":17}},"115":{"start":{"line":455,"column":20},"end":{"line":455,"column":110}},"116":{"start":{"line":456,"column":23},"end":{"line":460,"column":17}},"117":{"start":{"line":457,"column":20},"end":{"line":457,"column":87}},"118":{"start":{"line":459,"column":20},"end":{"line":459,"column":94}},"119":{"start":{"line":463,"column":12},"end":{"line":469,"column":14}},"120":{"start":{"line":470,"column":12},"end":{"line":470,"column":26}},"121":{"start":{"line":473,"column":4},"end":{"line":476,"column":6}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":43},"end":{"line":16,"column":61}},{"start":{"line":16,"column":64},"end":{"line":16,"column":65}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":8}},{"start":{"line":19,"column":8},"end":{"line":19,"column":8}}]},"3":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":51},"end":{"line":24,"column":59}},{"start":{"line":24,"column":62},"end":{"line":24,"column":92}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":77},"end":{"line":24,"column":85}},{"start":{"line":24,"column":89},"end":{"line":24,"column":91}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":12}},{"start":{"line":40,"column":12},"end":{"line":40,"column":12}}]},"6":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":16},"end":{"line":40,"column":43}},{"start":{"line":40,"column":47},"end":{"line":40,"column":74}}]},"7":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":16}},{"start":{"line":49,"column":16},"end":{"line":49,"column":16}}]},"8":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":36},"end":{"line":102,"column":46}},{"start":{"line":102,"column":50},"end":{"line":102,"column":53}}]},"9":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":16},"end":{"line":193,"column":16}},{"start":{"line":193,"column":16},"end":{"line":193,"column":16}}]},"10":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":20},"end":{"line":203,"column":20}},{"start":{"line":203,"column":20},"end":{"line":203,"column":20}}]},"11":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":24},"end":{"line":204,"column":31}},{"start":{"line":204,"column":35},"end":{"line":204,"column":48}},{"start":{"line":204,"column":52},"end":{"line":204,"column":78}}]},"12":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":20},"end":{"line":238,"column":20}},{"start":{"line":238,"column":20},"end":{"line":238,"column":20}}]},"13":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":24},"end":{"line":239,"column":31}},{"start":{"line":239,"column":35},"end":{"line":239,"column":48}},{"start":{"line":239,"column":52},"end":{"line":239,"column":78}}]},"14":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":16},"end":{"line":259,"column":16}},{"start":{"line":259,"column":16},"end":{"line":259,"column":16}}]},"15":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":23},"end":{"line":261,"column":23}},{"start":{"line":261,"column":23},"end":{"line":261,"column":23}}]},"16":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":20},"end":{"line":279,"column":20}},{"start":{"line":279,"column":20},"end":{"line":279,"column":20}}]},"17":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":16},"end":{"line":285,"column":16}},{"start":{"line":285,"column":16},"end":{"line":285,"column":16}}]},"18":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":23},"end":{"line":287,"column":23}},{"start":{"line":287,"column":23},"end":{"line":287,"column":23}}]},"19":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":20},"end":{"line":307,"column":20}},{"start":{"line":307,"column":20},"end":{"line":307,"column":20}}]},"20":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":16},"end":{"line":313,"column":16}},{"start":{"line":313,"column":16},"end":{"line":313,"column":16}}]},"21":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":23},"end":{"line":315,"column":23}},{"start":{"line":315,"column":23},"end":{"line":315,"column":23}}]},"22":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":16},"end":{"line":371,"column":16}},{"start":{"line":371,"column":16},"end":{"line":371,"column":16}}]},"23":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":20},"end":{"line":381,"column":20}},{"start":{"line":381,"column":20},"end":{"line":381,"column":20}}]},"24":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":24},"end":{"line":382,"column":31}},{"start":{"line":382,"column":35},"end":{"line":382,"column":48}},{"start":{"line":382,"column":52},"end":{"line":382,"column":78}}]},"25":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":20},"end":{"line":416,"column":20}},{"start":{"line":416,"column":20},"end":{"line":416,"column":20}}]},"26":{"line":417,"type":"binary-expr","locations":[{"start":{"line":417,"column":24},"end":{"line":417,"column":31}},{"start":{"line":417,"column":35},"end":{"line":417,"column":48}},{"start":{"line":417,"column":52},"end":{"line":417,"column":78}}]},"27":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":16},"end":{"line":437,"column":16}},{"start":{"line":437,"column":16},"end":{"line":437,"column":16}}]},"28":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":23},"end":{"line":439,"column":23}},{"start":{"line":439,"column":23},"end":{"line":439,"column":23}}]},"29":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":16},"end":{"line":454,"column":16}},{"start":{"line":454,"column":16},"end":{"line":454,"column":16}}]},"30":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":23},"end":{"line":456,"column":23}},{"start":{"line":456,"column":23},"end":{"line":456,"column":23}}]}},"code":["/*"," * mockserver"," * http://mock-server.com"," *"," * Copyright (c) 2014 James Bloom"," * Licensed under the Apache License, Version 2.0"," */","","(function () {","    \"use strict\";","","    var Q = require('q');","    var http = require('http');","","    function sendRequest(host, port, path, jsonBody, resolveCallback) {","        var promise = (global.protractor ? protractor.promise : Q);","        var deferred = promise.defer();","","        if (global.protractor)","        {","            deferred.resolve = deferred.fulfill;","        }","","        var body = (typeof jsonBody === \"string\" ? jsonBody : JSON.stringify(jsonBody || \"\"));","        var options = {","            method: 'PUT',","            host: host,","            path: path,","            port: port,","            headers: {","                'Content-Type': \"application/json; charset=utf-8\"","            }","        };","","        var req = http.request(options);","","        req.once('response', function (response) {","            var data = '';","","            if (response.statusCode === 400 || response.statusCode === 404) {","                deferred.reject(response.statusCode);","            }","","            response.on('data', function (chunk) {","                data += chunk;","            });","","            response.on('end', function () {","                if (resolveCallback) {","                    deferred.resolve(resolveCallback(data));","                } else {","                    deferred.resolve({","                        statusCode: response.statusCode,","                        body: data","                    });","                }","            });","        });","","        req.once('error', function (error) {","            deferred.reject(error);","        });","","        req.write(body);","        req.end();","","        return deferred.promise;","    }","","    /**","     * Start the client communicating to a MockServer at the specified host and port","     * for example:","     *","     *   var client = mockServerClient(\"localhost\", 1080);","     *","     * @param host the host for the MockServer to communicate with","     * @param port the port for the MockServer to communicate with","     */","    var mockServerClient = function (host, port) {","","            /**","             * The default headers added to to the mocked response when using mockSimpleResponse(...)","             */","            var defaultResponseHeaders = [","                {\"name\": \"Content-Type\", \"values\": [\"application/json; charset=utf-8\"]},","                {\"name\": \"Cache-Control\", \"values\": [\"no-cache, no-store\"]}","            ];","            var createResponseMatcher = function (path) {","                return {","                    method: \"\",","                    path: path,","                    body: \"\",","                    headers: [],","                    cookies: [],","                    queryStringParameters: []","                };","            };","            var createExpectation = function (path, responseBody, statusCode) {","                return {","                    httpRequest: createResponseMatcher(path),","                    httpResponse: {","                        statusCode: statusCode || 200,","                        body: JSON.stringify(responseBody),","                        cookies: [],","                        headers: defaultResponseHeaders,","                        delay: {","                            timeUnit: \"MICROSECONDS\",","                            value: 0","                        }","                    },","                    times: {","                        remainingTimes: 1,","                        unlimited: false","                    }","                };","            };","            /**","             * Setup an expectation in the MockServer by specifying an expectation object","             * for example:","             *","             *   mockServerClient(\"localhost\", 1080).mockAnyResponse(","             *       {","             *           'httpRequest': {","             *               'path': '/somePath',","             *               'body': {","             *                   'type': \"STRING\",","             *                   'value': 'someBody'","             *               }","             *           },","             *           'httpResponse': {","             *               'statusCode': 200,","             *               'body': Base64.encode(JSON.stringify({ name: 'first_body' })),","             *               'delay': {","             *                   'timeUnit': 'MILLISECONDS',","             *                   'value': 250","             *               }","             *           },","             *           'times': {","             *               'remainingTimes': 1,","             *               'unlimited': false","             *           }","             *       }","             *   );","             *","             * @param expectation the expectation to setup on the MockServer","             */","            var mockAnyResponse = function (expectation) {","                return sendRequest(host, port, \"/expectation\", expectation);","            };","            /**","             * Setup an expectation in the MockServer without having to specify the full expectation object","             * for example:","             *","             *   mockServerClient(\"localhost\", 1080).mockSimpleResponse('/somePath', { name: 'value' }, 203);","             *","             * @param path the path to match requests against","             * @param responseBody the response body to return if a request matches","             * @param statusCode the response code to return if a request matches","             */","            var mockSimpleResponse = function (path, responseBody, statusCode) {","                return mockAnyResponse(createExpectation(path, responseBody, statusCode));","            };","            /**","             * Override the default headers that are used to specify the response headers in mockSimpleResponse(...)","             * (note: if you use mockAnyResponse(...) the default headers are not used)","             * for example:","             *","             *   mockServerClient(\"localhost\", 1080).setDefaultHeaders([","             *       {\"name\": \"Content-Type\", \"values\": [\"application/json; charset=utf-8\"]},","             *       {\"name\": \"Cache-Control\", \"values\": [\"no-cache, no-store\"]}","             *   ])","             *","             * @param headers the path to match requests against","             */","            var setDefaultHeaders = function (headers) {","                defaultResponseHeaders = headers;","            };","            /**","             * Verify a request has been sent for example:","             *","             *   expect(client.verify({","             *       'httpRequest': {","             *           'method': 'POST',","             *           'path': '/somePath'","             *       }","             *   })).toBeTruthy();","             *","             * @param request the http request that must be matched for this verification to pass","             * @param count   the number of times this request must be matched","             * @param exact   true if the count is matched as \"equal to\" or false if the count is matched as \"greater than or equal to\"","             */","            var verify = function (request, count, exact) {","                if (count === undefined) {","                    count = 1;","                }","                return sendRequest(host, port, \"/verify\", {","                    \"httpRequest\": request,","                    \"times\": {","                        \"count\": count,","                        \"exact\": exact","                    }","                }).then(function (result) {","                    if (result.statusCode !== 202) {","                        console && console.error && console.error(result.body);","                        throw result.body;","                    }","                    return _this;","                });","            };","            /**","             * Verify a sequence of requests has been sent for example:","             *","             *   client.verifySequence(","             *       {","             *          'method': 'POST',","             *          'path': '/first_request'","             *       },","             *       {","             *          'method': 'POST',","             *          'path': '/second_request'","             *       },","             *       {","             *          'method': 'POST',","             *          'path': '/third_request'","             *       }","             *   );","             *","             * @param arguments the list of http requests that must be matched for this verification to pass","             */","            var verifySequence = function () {","                var requestSequence = [];","                for (var i = 0; i < arguments.length; i++) {","                    requestSequence.push(arguments[i]);","                }","                return sendRequest(host, port, \"/verifySequence\", {","                    \"httpRequests\": requestSequence","                }).then(function (result) {","                    if (result.statusCode !== 202) {","                        console && console.error && console.error(result.body);","                        throw result.body;","                    }","                    return _this;","                });","            };","            /**","             * Reset MockServer by clearing all expectations","             */","            var reset = function () {","                return sendRequest(host, port, \"/reset\");","            };","            /**","             * Clear all expectations that match the specified path","             *","             * @param pathOrRequestMatcher  if a string is passed in the value will be treated as the path to","             *                              decide which expectations to cleared, however if an object is passed","             *                              in the value will be treated as a full request matcher object","             */","            var clear = function (pathOrRequestMatcher) {","                if (typeof pathOrRequestMatcher === \"string\") {","                    return sendRequest(host, port, \"/clear\", createResponseMatcher(pathOrRequestMatcher));","                } else if (pathOrRequestMatcher) {","                    return sendRequest(host, port, \"/clear\", pathOrRequestMatcher);","                } else {","                    return sendRequest(host, port, \"/clear\", createResponseMatcher(\".*\"));","                }","            };","            /**","             * Retrieve the recorded requests that match the parameter, as follows:","             * - use a string value to match on path,","             * - use a request matcher object to match on a full request,","             * - or use null to retrieve all requests","             *","             * @param pathOrRequestMatcher  if a string is passed in the value will be treated as the path, however","             *                              if an object is passed in the value will be treated as a full request","             *                              matcher object, if null is passed in it will be treated as match all","             */","            var retrieveRequests = function (pathOrRequestMatcher) {","                var resolveCallback = function(responseText) {","                    if (responseText) {","                        return JSON.parse(responseText);","                    } else {","                        return undefined;","                    }","                };","                if (typeof pathOrRequestMatcher === \"string\") {","                    return sendRequest(host, port, \"/retrieve\", createResponseMatcher(pathOrRequestMatcher), resolveCallback);","                } else if (pathOrRequestMatcher) {","                    return sendRequest(host, port, \"/retrieve\", pathOrRequestMatcher, resolveCallback);","                } else {","                    return sendRequest(host, port, \"/retrieve\", createResponseMatcher(\".*\"), resolveCallback);","                }","            };","            /**","             * Retrieve the setup expectations that match the parameter,","             * the expectation is retrieved by matching the parameter","             * on the expectations own request matcher, as follows:","             * - use a string value to match on path,","             * - use a request matcher object to match on a full request,","             * - or use null to retrieve all requests","             *","             * @param pathOrRequestMatcher  if a string is passed in the value will be treated as the path, however","             *                              if an object is passed in the value will be treated as a full request","             *                              matcher object, if null is passed in it will be treated as match all","             */","            var retrieveExpectations = function (pathOrRequestMatcher) {","                var resolveCallback = function(responseText) {","                    if (responseText) {","                        return JSON.parse(responseText);","                    } else {","                        return undefined;","                    }","                };","                if (typeof pathOrRequestMatcher === \"string\") {","                    return sendRequest(host, port, \"/retrieve?type=expectation\", createResponseMatcher(pathOrRequestMatcher), resolveCallback);","                } else if (pathOrRequestMatcher) {","                    return sendRequest(host, port, \"/retrieve?type=expectation\", pathOrRequestMatcher, resolveCallback);","                } else {","                    return sendRequest(host, port, \"/retrieve?type=expectation\", createResponseMatcher(\".*\"), resolveCallback);","                }","            };","","            var _this = {","                mockAnyResponse: mockAnyResponse,","                mockSimpleResponse: mockSimpleResponse,","                setDefaultHeaders: setDefaultHeaders,","                verify: verify,","                verifySequence: verifySequence,","                reset: reset,","                clear: clear,","                retrieveRequests: retrieveRequests,","                retrieveExpectations: retrieveExpectations","            };","            return  _this;","        },","        /**","         * Start the client communicating to a MockServer proxy at the specified host and port","         * for example:","         *","         *   var client = proxyClient(\"localhost\", 1080);","         *","         * @param host the host for the proxy to communicate with","         * @param port the port for the proxy to communicate with","         */","        proxyClient = function (host, port) {","","            var createResponseMatcher = function (path) {","                return {","                    method: \"\",","                    path: path,","                    body: \"\",","                    headers: [],","                    cookies: [],","                    queryStringParameters: []","                };","            };","            /**","             * Verify a request has been sent for example:","             *","             *   expect(client.verify({","             *       'httpRequest': {","             *           'method': 'POST',","             *           'path': '/somePath'","             *       }","             *   })).toBeTruthy();","             *","             * @param request the http request that must be matched for this verification to pass","             * @param count   the number of times this request must be matched","             * @param exact   true if the count is matched as \"equal to\" or false if the count is matched as \"greater than or equal to\"","             */","            var verify = function (request, count, exact) {","                if (count === undefined) {","                    count = 1;","                }","                return sendRequest(host, port, \"/verify\", JSON.stringify({","                    \"httpRequest\": request,","                    \"times\": {","                        \"count\": count,","                        \"exact\": exact","                    }","                })).then(function (result) {","                    if (result.statusCode !== 202) {","                        console && console.error && console.error(result.body);","                        throw result.body;","                    }","                    return _this;","                });","            };","            /**","             * Verify a sequence of requests has been sent for example:","             *","             *   client.verifySequence(","             *       {","             *          'method': 'POST',","             *          'path': '/first_request'","             *       },","             *       {","             *          'method': 'POST',","             *          'path': '/second_request'","             *       },","             *       {","             *          'method': 'POST',","             *          'path': '/third_request'","             *       }","             *   );","             *","             * @param arguments the list of http requests that must be matched for this verification to pass","             */","            var verifySequence = function () {","                var requestSequence = [];","                for (var i = 0; i < arguments.length; i++) {","                    requestSequence.push(arguments[i]);","                }","                return sendRequest(host, port, \"/verifySequence\", JSON.stringify({","                    \"httpRequests\": requestSequence","                })).then(function (result) {","                    if (result.statusCode !== 202) {","                        console && console.error && console.error(result.body);","                        throw result.body;","                    }","                    return _this;","                });","            };","            /**","             * Reset the proxy by clearing all recorded requests","             */","            var reset = function () {","                return sendRequest(host, port, \"/reset\");","            };","            /**","             * Clear all recorded requests that match the specified path","             *","             * @param pathOrRequestMatcher  if a string is passed in the value will be treated as the path to","             *                              decide which recorded requests to cleared, however if an object is","             *                              passed in the value will be treated as a full request matcher object","             */","            var clear = function (pathOrRequestMatcher) {","                if (typeof pathOrRequestMatcher === \"string\") {","                    return sendRequest(host, port, \"/clear\", createResponseMatcher(pathOrRequestMatcher));","                } else if (pathOrRequestMatcher) {","                    return sendRequest(host, port, \"/clear\", pathOrRequestMatcher);","                } else {","                    return sendRequest(host, port, \"/clear\", createResponseMatcher(\".*\"));","                }","            };","            /**","             * Pretty-print the json for all requests / responses that match the specified path","             * as Expectations to the log. They are printed into a dedicated log called mockserver_request.log","             *","             * @param pathOrRequestMatcher  if a string is passed in the value will be treated as the path to","             *                              decide which recorded requests to cleared, however if an object is","             *                              passed in the value will be treated as a full request matcher object","             */","            var dumpToLogs = function (pathOrRequestMatcher) {","                if (typeof pathOrRequestMatcher === \"string\") {","                    return sendRequest(host, port, \"/dumpToLog\", createResponseMatcher(pathOrRequestMatcher));","                } else if (pathOrRequestMatcher) {","                    return sendRequest(host, port, \"/dumpToLog\", pathOrRequestMatcher);","                } else {","                    return sendRequest(host, port, \"/dumpToLog\", createResponseMatcher(\".*\"));","                }","            };","","            var _this = {","                verify: verify,","                verifySequence: verifySequence,","                reset: reset,","                clear: clear,","                dumpToLogs: dumpToLogs","            };","            return  _this;","        };","","    module.exports = {","        mockServerClient: mockServerClient,","        proxyClient: proxyClient","    };","})();"],"l":{"9":1,"12":1,"13":1,"15":1,"16":0,"17":0,"19":0,"21":0,"24":0,"25":0,"35":0,"37":0,"38":0,"40":0,"41":0,"44":0,"45":0,"48":0,"49":0,"50":0,"52":0,"60":0,"61":0,"64":0,"65":0,"67":0,"79":1,"84":0,"88":0,"89":0,"98":0,"99":0,"147":0,"148":0,"160":0,"161":0,"175":0,"176":0,"192":0,"193":0,"194":0,"196":0,"203":0,"204":0,"205":0,"207":0,"230":0,"231":0,"232":0,"233":0,"235":0,"238":0,"239":0,"240":0,"242":0,"248":0,"249":0,"258":0,"259":0,"260":0,"261":0,"262":0,"264":0,"277":0,"278":0,"279":0,"280":0,"282":0,"285":0,"286":0,"287":0,"288":0,"290":0,"305":0,"306":0,"307":0,"308":0,"310":0,"313":0,"314":0,"315":0,"316":0,"318":0,"322":0,"333":0,"346":0,"347":0,"370":0,"371":0,"372":0,"374":0,"381":0,"382":0,"383":0,"385":0,"408":0,"409":0,"410":0,"411":0,"413":0,"416":0,"417":0,"418":0,"420":0,"426":0,"427":0,"436":0,"437":0,"438":0,"439":0,"440":0,"442":0,"453":0,"454":0,"455":0,"456":0,"457":0,"459":0,"463":0,"470":0,"473":1}},"/home/travis/build/npmtest/node-npmtest-mockserver-client/node_modules/mockserver-client/Gruntfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-mockserver-client/node_modules/mockserver-client/Gruntfile.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":17},"end":{"line":11,"column":34}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":66,"column":2}},"2":{"start":{"line":13,"column":4},"end":{"line":54,"column":7}},"3":{"start":{"line":56,"column":4},"end":{"line":56,"column":37}},"4":{"start":{"line":57,"column":4},"end":{"line":57,"column":43}},"5":{"start":{"line":58,"column":4},"end":{"line":58,"column":47}},"6":{"start":{"line":59,"column":4},"end":{"line":59,"column":46}},"7":{"start":{"line":60,"column":4},"end":{"line":60,"column":49}},"8":{"start":{"line":62,"column":4},"end":{"line":62,"column":84}},"9":{"start":{"line":64,"column":4},"end":{"line":64,"column":54}},"10":{"start":{"line":65,"column":4},"end":{"line":65,"column":55}}},"branchMap":{},"code":["/*"," * mockserver"," * http://mock-server.com"," *"," * Copyright (c) 2014 James Bloom"," * Licensed under the Apache License, Version 2.0"," */","","'use strict';","","module.exports = function (grunt) {","","    grunt.initConfig({","        exec: {","            stop_existing_mockservers: './stop_MockServer.sh'","        },","        jshint: {","            options: {","                jshintrc: '.jshintrc'","            },","            user_defaults: [","                'Gruntfile.js',","                'js/**/*.js',","                '!js/lib/**/*.js',","                '<%= nodeunit.no_proxy %>',","                '<%= nodeunit.with_proxy %>'","            ]","        },","        start_mockserver: {","            options: {","                serverPort: 1080,","                serverSecurePort: 1082,","                proxyPort: 1090,","                proxySecurePort: 1092","            }","        },","        stop_mockserver: {","            options: {","                serverPort: 1080,","                proxyPort: 1090","            }","        },","        nodeunit: {","            no_proxy: [","                'test/no_proxy/*_test.js'","            ],","            with_proxy: [","                'test/with_proxy/*_test.js'","            ],","            options: {","                reporter: 'nested'","            }","        }","    });","","    grunt.loadNpmTasks('grunt-exec');","    grunt.loadNpmTasks('mockserver-grunt');","    grunt.loadNpmTasks('grunt-contrib-jshint');","    grunt.loadNpmTasks('grunt-contrib-clean');","    grunt.loadNpmTasks('grunt-contrib-nodeunit');","","    grunt.registerTask('test', ['start_mockserver', 'nodeunit', 'stop_mockserver']);","","    grunt.registerTask('wrecker', ['jshint', 'test']);","    grunt.registerTask('default', ['exec', 'wrecker']);","};",""],"l":{"11":1,"13":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"64":0,"65":0}}}